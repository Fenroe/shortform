// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: urls.sql

package database

import (
	"context"
	"time"
)

const checkForURLWithID = `-- name: CheckForURLWithID :one
SELECT COUNT(*) FROM urls WHERE id=$1
`

func (q *Queries) CheckForURLWithID(ctx context.Context, id string) (int64, error) {
	row := q.db.QueryRowContext(ctx, checkForURLWithID, id)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createURL = `-- name: CreateURL :one
INSERT INTO urls (id, created_at, updated_at, expired_at, dest)
VALUES (
    $1,
    NOW(),
    NOW(),
    $2,
    $3
)
RETURNING id, dest, created_at, updated_at, expired_at
`

type CreateURLParams struct {
	ID        string
	ExpiredAt time.Time
	Dest      string
}

func (q *Queries) CreateURL(ctx context.Context, arg CreateURLParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createURL, arg.ID, arg.ExpiredAt, arg.Dest)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.Dest,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExpiredAt,
	)
	return i, err
}
